---
########################################################
# Phase 1: server provisioning
#
# After running this playbook you will have
# servers with RHEL8 running on VMware
#
# For input this playbook needs a dictionary with
# the following paramters

#   vmw_machines:
#           - name: server-name
#             bdisksize: 50
#             disk2size: 200
#             vmtype: n1-standard-2
#             group: label for group

# Additional variables which are used for vmware
# are defined in the inventory

# For using vmware.rest collection the following environment variables
# need to be defined
# export VMWARE_HOST=vcenter.test
# export VMWARE_USER=myvcenter-user
# export VMWARE_password=mypassword
#
# Gloablly required variables:
#
# Optionally: vcenter_validate_certs: no or export VMWARE_VALIDATE_CERTS=no
# vmware_cluster:
# vmware_datacenter:
# vmware_datastore:
# vmware_folder:
# vmware_template:

- name: phase 1 -- Server Provisioning
  hosts: localhost
  gather_facts: false

  tasks:
  # You don't have to do this in Automation Hub
  # - name: Ensure required python library for vmware is installed
  #  dnf:
  #    name: python3-aiohttp
  #    state: latest

  - name: Output creation dictionary configuration
    debug:
      msg:
        - "Name: {{ item.name }}"
        - "disk2:{{ item.disk_gb }} GB"
        - "memory: {{ item.mem_mb | default('16384') }} MB"
        - "cpus: {{ item.cpus | default('4') }}"
        - "group:{{ item.group }}"
    loop: "{{ vmware_machines }}"

  - name: Create VM from template
    community.vmware.vmware_guest:
      # hostname: "{{ vcenter_ip }}"
      # username: "{{ vcenter_username }}"
      # password: "{{ vcenter_password }}"
      validate_certs: "{{ vcenter_validate_certs }}"
      name: "{{ item.name }}"
      template: "{{ vmware_template }}"
      datacenter: "{{ vmware_datacenter }}"
      datastore: "{{ vmware_datastore }}"
      folder: "{{ vmware_folder }}"
      state: poweredon
      cluster: "{{ vmware_cluster }}"
      annotation: "{{ item.group }}"
      customization:
        hostname: "{{ item.name }}"
      disk:
      - datastore: "{{ vmware_datastore }}"
        disk_mode: persistent
        size_gb: "130"
        controller_number: 0
        unit_number: 0
        controller_type: 'sata'
        scsi_type: 'paravirtual'
      - datastore: "{{ vmware_datastore }}"
        disk_mode: persistent
        size_gb: "{{ item.disk_gb }}"
        controller_number: 1
        unit_number: 1
        controller_type: 'sata'
        scsi_type: 'paravirtual'
      hardware:
        memory_mb: "{{ item.mem_mb | default('16384') }}"
        num_cpus: "{{ item.cpus | default('4') }}"
      wait_for_ip_address: true
    loop: "{{ vmware_machines }}"
