---
########################################################
# Phase 1: server provisioning
#
# After running this playbook you will have
# servers with RHEL8 running on VMware
#
# For input this playbook needs a dictionary with
# the following paramters

#   vmw_machines:
#           - name: server-name
#             bdisksize: 50
#             disk2size: 200
#             vmtype: n1-standard-2
#             group: label for group

# Additional variables which are used for vmware
# are defined in the inventory

# For using vmware.rest collection the following environment variables
# need to be defined
# export VMWARE_HOST=vcenter.test
# export VMWARE_USER=myvcenter-user
# export VMWARE_password=mypassword
#
# Gloablly required variables:
#
# Optionally: vcenter_validate_certs: no or export VMWARE_VALIDATE_CERTS=no
# vmware_cluster_id:
# vmware_datastore:
# vmware_folder:
# vmware_resource_pool:
# vmware_guest_os
# vmware_hardware_version:

- hosts: localhost
  gather_facts: false

  tasks:
  # You don't have to do this in Automation Hub
  # - name: Ensure required python library for vmware is installed
  #  dnf:
  #    name: python3-aiohttp
  #    state: latest

  - name: Output creation dictionary configuration
    debug:
      msg:
        - "Name: {{ item.name }}"
        - "boot: {{ item.bdisksize }}"
        - "disk2:{{ item.disk2size }}"
        - "type: {{ item.vmtype }}"
        - "group:{{ item.group }}"
    loop: "{{ vmware_machines }}"

  - name: Create VMs
    vmware.vmware_rest.vcenter_vm:
      placement:
        cluster: "{{ vmware_cluster_id }}"
        datastore: "{{ vmware_datastore }}"
        folder: "{{ vmware_folder }}"
        resource_pool: "{{ vmware_resource_pool }}"
      name: "{{ item.name }}"
      guest_OS: DEBIAN_8_64
      hardware_version: VMX_11
      memory:
        hot_add_enabled: true
        size_MiB: 1024
    register: _result
    loop: "{{ vmware_machines }}"
