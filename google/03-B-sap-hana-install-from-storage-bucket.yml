---
# Phase 3 - step B
#
# This playbook downloads the hana software defined
# in the list {{ sap_hana_software }} to {{ sap_hana_install_software_directory }}
#
# The role sap_hana_install unpacks the software in {{ sap_hana_install_software_directory }}
# Then it calls the installation of SAP HANA with the configured paramters

- name: Phase 3-B - Install Hana
  hosts: hanas
  become: true

  tasks:

     #
     # the files are stored in a google bucket
     #  download the required files to {{ sap_hana_install_software_directory }}
    - name: ensure target directory exists
      file:
         path: "{{ sap_hana_install_software_directory }}"
         state: directory
         mode: '0755'
         owner: root
         group: root

    - name: copy files from storage bucket to {{ sap_hana_install_software_directory }}
      google.cloud.gcp_storage_object:
        action: download
        bucket: "{{ gcp_bucket_sap }}"
        src: "{{ sap_hana_version }}/{{ item }}"
        dest: "{{ sap_hana_install_software_directory }}/{{ item }}"
        auth_kind: application
      loop: "{{ sap_hana_install_sarfiles }}"
      when: sap_hana_install_sarfiles is defined

    - name: copy sapcar to {{ sap_hana_install_software_directory }}
      command: gsutil cp gs://{{ gcp_bucket_sap }}/{{ sap_hana_version }}/SAPCAR*.EXE {{ sap_hana_install_software_directory }}
      when: sap_hana_install_sarfiles is defined

    - name: sync hana directory from storage bucket to {{ sap_hana_install_software_directory }}
      command: gsutil -m rsync  gs://{{ gcp_bucket_sap }}/{{ sap_hana_version }}  {{ sap_swpm_software_path }}
      when: sap_hana_install_sarfiles is undefined

    - name: execute the SAP Hana Installation
      include_role:
        name: community.sap_install.sap_hana_install
